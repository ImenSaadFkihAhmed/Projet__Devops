version: '3'

services:
  jenkins-container:
    build:
      context: ~/Documents/DevOps/Spring-Boot-MySQL-DevOps-Pipeline/env/
      dockerfile: Dockerfile
    image: jenkins
    container_name: "jenkins-container"
    ports:
      - "8080:8080"
    networks:
      - devnet
    volumes:
      - "jenkins_home:/var/jenkins_home"
      - "jenkins_docker_certs:/certs/client:ro"
      - "~/Documents/DevOps/Spring-Boot-MySQL-DevOps-Pipeline/env/Dockerfile:/Dockerfile"
      - "/var/run/docker.sock:/var/run/docker.sock"

  sonarqube-container:
    image: sonarqube
    container_name: "sonarqube-container"
    restart: always
    ports:
      - "9000:9000"
    networks:
      - devnet
    volumes:
      - "/opt/sonar/:/var/lib/sonar"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:mysql://mysqldb-container:3306/pet_store
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar

  nexus-container:
    image: sonatype/nexus3
    container_name: "nexus-container"
    ports:
      - "8081:8081"
    networks:
      - devnet
    volumes:
      - "nexus_data:/nexus-data"

networks:
  devnet:
    driver: bridge

volumes:
  jenkins_home:
  jenkins_docker_certs:
  nexus_data: