version: '3'

services:
  jenkins-container:
    build:
      context: ~/Documents/DevOps/DevOps_TP_2_Pipeline/env/
      dockerfile: Dockerfile
    image: jenkins
    container_name: "jenkins-container"
    ports:
      - "8080:8080"
    volumes:
      - "jenkins_home:/var/jenkins_home"
      - "jenkins_docker_certs:/certs/client:ro"
      - "~/Documents/DevOps/DevOps_TP_2_Pipeline/env/Dockerfile:/Dockerfile"
      - "/var/run/docker.sock:/var/run/docker.sock"

  sonarqube-container:
    image: sonarqube
    container_name: "sonarqube-container"
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - "/opt/sonar/:/var/lib/sonar"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:mysql://mysqldb-container:3306/pet_store
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar

  nexus-container:
    image: sonatype/nexus3
    container_name: "nexus-container"
    ports:
      - "8081:8081"
    volumes:
      - "nexus_data:/nexus-data"

  mysqldb-container:
    image: mysql
    container_name: "mysqldb-container"
    environment:
      - MYSQL_USER=${MYSQLDB_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQLDB_DATABASE}
    ports:
      - ${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}
    volumes:
      - /var/lib/docker/volumes/springboot-mysql-devops-pipeline-volume/_data:/var/lib/mysql

networks:
  default:
    external:
      name: pet-store-network

volumes:
  jenkins_home:
  jenkins_docker_certs:
  nexus_data: